import { <%= hyphenatedToTilteCaseConcatenated(name) %>ResponseType  } from "../model/<%= name %>.types";
import { <%= hyphenatedToTilteCaseConcatenated(name) %>Service } from './<%= name %>.service';

describe('<%= hyphenatedToTilteCaseConcatenated(name) %>Service', () => {
  const <%= stripHyphens(name) %>Service = new <%= hyphenatedToTilteCaseConcatenated(name) %>Service();

  it ('should exist when imported', () => {
    // arrange
    // act
    // assert
    expect(<%= hyphenatedToTilteCaseConcatenated(name) %>Service).toBeDefined();
  });

  it ('should exist when instantiated', () => {
    // arrange
    // act
    // assert
    expect(<%= stripHyphens(name) %>Service).toBeDefined();
  });

  describe('getData', () => {
    it ('should be the public method getData in the class when instantiated', () => {
      // arrange
      const <%= stripHyphens(name) %>Service = new <%= hyphenatedToTilteCaseConcatenated(name) %>Service();
      let response: null | <%= hyphenatedToTilteCaseConcatenated(name) %>ResponseType = null;
      const expectedResult: <%= hyphenatedToTilteCaseConcatenated(name) %>ResponseType = { message: '<%= name %>' }
      // act
      response = <%= stripHyphens(name) %>Service.getData();
      // assert
      expect(<%= stripHyphens(name) %>Service.getData).toBeDefined();
    });

    it('should return the correct response object when called', () => {
      // arrange
      const <%= stripHyphens(name) %>Service = new <%= hyphenatedToTilteCaseConcatenated(name) %>Service();
      let response: null | <%= hyphenatedToTilteCaseConcatenated(name) %>ResponseType = null;
      const expectedResult: <%= hyphenatedToTilteCaseConcatenated(name) %>ResponseType = { message: '<%= name %>' }
      // act
      response = <%= stripHyphens(name) %>Service.getData();
      // assert
      expect(response).toEqual(expectedResult);
    });
  });
});
